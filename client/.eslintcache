[{"/Users/keefeho/Desktop/Important/Projects/HTN/client/src/App.js":"1","/Users/keefeho/Desktop/Important/Projects/HTN/client/src/index.js":"2","/Users/keefeho/Desktop/Important/Projects/HTN/client/src/components/upload.js":"3","/Users/keefeho/Desktop/Important/Projects/HTN/client/src/components/custominput.js":"4"},{"size":705,"mtime":1610851783682,"results":"5","hashOfConfig":"6"},{"size":516,"mtime":1610851468876,"results":"7","hashOfConfig":"6"},{"size":7083,"mtime":1610903782134,"results":"8","hashOfConfig":"6"},{"size":1106,"mtime":1610857186307,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1heyzzq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/keefeho/Desktop/Important/Projects/HTN/client/src/App.js",["20","21"],"import React from 'react';\nimport { render } from 'react-dom';\nimport Upload from './components/upload.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\nfunction App() {\n  const commonStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100vw',\n    height: '100vh',\n    minHeight: '600px',\n    backgroundColor: '#9BC3EB',\n    backgroundSize: 'cover',\n  };\n  return (\n    <div className=\"App\" style={commonStyle}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Upload}/>\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/keefeho/Desktop/Important/Projects/HTN/client/src/index.js",[],"/Users/keefeho/Desktop/Important/Projects/HTN/client/src/components/upload.js",["22","23"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image';\nimport './styles.css'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst styles = {\n  fontFamily: 'sans-serif',\n  textAlign: 'center',\n  display: 'flex',\n};\n\nconst homeImageStyle = {\n  marginLeft:'-350px',\n  marginRight:'800px',\n  marginBottom:'120px'\n}\n\nconst fileInputStyle = {\n  width: '120px',\n  height: '120px',\n  position: 'absolute',\n  left: '150px', \n  top: '285px'\n}\n\nconst buttonStyle = {\n  backgroundColor: '#9BC3EB',\n  border: 'none',\n  fontSize: '40px',\n  fontWeight: 'bold',\n  width: '650px',\n  position: 'absolute',\n  top: '400px', \n  left: '125px'\n} \n\nconst textStyle = {\n  backgroundColor: '#9BC3EB',\n  border: 'none',\n  fontSize: '20px',\n  fontWeight: 'bold',\n  width: '650px',\n  position: 'absolute',\n  top: '365px', \n  left: '370px'\n}\n\nconst captionStyle = {\n  position: 'static',\n  color: '#545454'\n}\n\nconst carouselStyle = {\n  position: 'absolute', \n  top: '100px',\n  left: '50px',\n  height: '300px',\n  width: '900px'\n}\n\nconst goatStyle = {\n  width: '300px', \n  height: '300px',\n  bottom: '100px',\n  right: '240px',\n  position: 'relative'\n}\n\nconst personStyle = {\n  width: '120px', \n  height: '230px',\n  bottom: '150px',\n  right: '240px',\n  position: 'relative'\n}\n\nconst personTwoStyle = {\n  width: '200px', \n  height: '300px',\n  bottom: '200px',\n  right: '240px',\n  position: 'relative'\n}\n\nconst catStyle = {\n  width: '300px', \n  height: '200px',\n  bottom: '70px',\n  right: '200px',\n  position: 'relative'\n}\nconst divStyle = {\n  left: '80px',\n  top: '20px',\n  position: 'relative'\n}\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [fileName, setFileName] = useState(null);\n\n  const submitFile = async () => {\n    setLoading(true)\n    try {\n      if (!file) {\n        setError(true);\n        throw new Error('Select a file first!');\n      }\n      const formData = new FormData();\n      formData.append('file', file[0]);\n      const resOne = await axios.post(`http://localhost:3001/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      const resTwo = await axios.post(`http://localhost:3001/analyze`, {\n          headers: {\n            'Content-Type': 'application/json',\n          }, body: {\n              'data': resOne.data,\n          }\n      })\n      console.log(resTwo)\n      const resThree = await axios.post(`http://localhost:3001/sentiment`, {\n          headers: {\n            'Content-Type': 'application/json',\n          }, body: {\n              'data': resTwo.data,\n          }\n      })\n      setData(resThree.data)\n      setLoading(false)\n    } catch (error) {\n      console.log(error)\n    }\n  };\n  if (data) { \n    console.log(data)\n  }\n  return (\n    <Container>\n      <Row>\n        <Col xs={14} md={4}>\n          <Image style={homeImageStyle} src=\"view.png\"/>\n        </Col>\n        <Col xs={10} md={4}>\n          {\n          loading && \n            <Spinner style={fileInputStyle} animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          }\n          {!loading && !data && \n            <div>\n              <div style={styles}>\n                <label className=\"custom-file-upload\">\n                  <input type=\"file\" multiple \n                  onChange={(event) => {\n                    setFile(event.target.files)\n                    setFileName(event.target.files[0].name)\n                  }} />\n                  <Image style={fileInputStyle} src=\"cloud.png\"/>\n                </label>\n                <div className=\"file-preview\"/>\n              </div>\n              {file &&\n                <div>\n                  <div style={textStyle}> File Uploaded: {fileName} </div>\n                </div>\n              }\n              <Button style={buttonStyle} onClick={submitFile}> Click here to analyze your audio! </Button>\n            </div>\n          }\n          {data && \n            <Carousel style={carouselStyle}>\n              <Carousel.Item>\n                <Carousel.Caption style={captionStyle}>\n                  <div style={divStyle}>\n                    <h3>Sentiment</h3>\n                    <p>Overall, your audio was {data.sentiment.overall}!</p>\n                    <p>On average, your audio was {(data.sentiment.total / data.sentiment.length) * 100}% positive! </p>\n                  </div>\n                  <Image style={goatStyle} src=\"goat.png\"/>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n                <Carousel.Caption style={captionStyle}>\n                  <div style={divStyle}>\n                    <h3>Opinions</h3>\n                    <p style={{'fontWeight': 'bold'}}>The most notable opinions of your audio</p>\n                    <div>\n                      {data.sentiment.opinions.map(document => (\n                        <p> {document.text} was a {document.sentiment} opinion and described as {document.opinionText} </p>\n                      ))}\n                    </div>\n                  </div>\n                  <Image style={personStyle} src=\"plataypus.png\"/>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n                <Carousel.Caption style={captionStyle}>\n                  <div style={divStyle}>\n                    <h3>Emotions</h3>\n                    <div>\n                      {data.tone.document.map(docu => (\n                        <p> This audio had a {Math.round((docu.score * 100))}% score for {docu.tone_name}</p>\n                      ))}\n                    </div>\n                  </div>\n                  <Image style={catStyle} src=\"cat.png\"/>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n                <Carousel.Caption style={captionStyle}>\n                  <div style={divStyle}>\n                    <h3>Emotions</h3>\n                    <p style={{'fontWeight': 'bold'}}>The most notable sentences of your audio</p>\n                    <div>\n                      {data.tone.sentence.map(sentences => (\n                        <p> \n                        \"{sentences.text}\" had tones of {\n                          sentences.tones.map(tone => (\n                            <div>{tone.tone_id} </div>\n                          ))\n                        } \n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                  <Image style={personTwoStyle} src=\"dog.png\"/>\n                </Carousel.Caption>\n              </Carousel.Item>\n            </Carousel>\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FileUpload;","/Users/keefeho/Desktop/Important/Projects/HTN/client/src/components/custominput.js",["24"],{"ruleId":"25","severity":1,"message":"26","line":2,"column":10,"nodeType":"27","messageId":"28","endLine":2,"endColumn":16},{"ruleId":"25","severity":1,"message":"29","line":8,"column":3,"nodeType":"27","messageId":"28","endLine":8,"endColumn":7},{"ruleId":"25","severity":1,"message":"30","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":12},{"ruleId":"25","severity":1,"message":"31","line":104,"column":10,"nodeType":"27","messageId":"28","endLine":104,"endColumn":15},{"ruleId":"25","severity":1,"message":"26","line":2,"column":10,"nodeType":"27","messageId":"28","endLine":2,"endColumn":16},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Form' is defined but never used.","'error' is assigned a value but never used."]